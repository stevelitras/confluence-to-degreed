AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31


Description: 'CICD pipeline stack'


Parameters:

  CfnDeployBucket:
    Type: String
    Description: 'CloudFormation deployment artifacts bucket'

  SSMPathRoot:
    Type: String

  GitHubUser:
    Type: String
    Description: 'The github Username'

  GitHubRepo:
    Type: String
    Description: 'The name of the github repo'

  GitHubToken:
    Type: String
    NoEcho: true
    Description: 'The token for github access'

  GitHubBranch:
    Type: String
    Description: 'The git repo branch that will kick off the pipeline when commited to'
    Default: 'master'

  VpcId:
    Description: VPC to Run this from
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: Subnet IDs to run from
    Type: List<AWS::EC2::Subnet::Id>

  InetSubnets:
    Description: Internet Load Balancer Subnets
    Type: List<AWS::EC2::Subnet::Id>

  TemplateFile:
    Description: The ARN for the SNS topic to notify on alarms.
    Type: String

  TopicArn:
    Description: The ARN for the SNS topic to notify on alarms.
    Type: String

  ServiceStackName:
    Type: String
    Description: 'The name of the service stack name the pipeline will deploy (with "-$env" at the end)'

  AwsAccountId:
    Type: String
    Description: Account Id

  FinalStackName:
    Type: String
    Description: Build Stack Name



Resources:

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      ManagedPolicyArns:
        - !Ref 'CFNPipelinePolicy'
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*:*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  Fn::Sub:
                    - 'arn:aws:s3:::${CfnDeployBucket}/*'
                    - BucketName: !Ref CfnDeployBucket
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
              - Effect: Allow
                # This statement is to allow deploy pre-processing actions (discover AWS account, region, VPC, subnets)
                Resource: '*'
                Action:
                  - 'ec2:DescribeNatGateways'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:*'
                  - 'acm:*'
                  - 'iam:ListRoles'
                  - 'iam:PassRole'
              - Effect: Allow
                # This statement is to allow deploy pre-processing actions (create and access CloudFormation deploy artifacts bucket)
                Resource:
                  - !Sub 'arn:aws:s3:::${CfnDeployBucket}'
                  - !Sub 'arn:aws:s3:::${CfnDeployBucket}/*'
                Action:
                  - 's3:CreateBucket'
                  - 's3:GetObject'
                  - 's3:PutObject'
              - Effect: Allow
                Action:
                  - "ecr:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:PutImage"
                  - "ecr:UploadLayerPart"
                  - "ecs:UpdateService"
                Resource: "*"

  # CodePipeline definition and required roles
  CFNPipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: CloudFormation Pipeline Execution Policy
      Path: '/'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Action:
            - 'cloudformation:CreateStack'
            - 'cloudformation:DescribeStacks'
            - 'cloudformation:DeleteStack'
            - 'cloudformation:UpdateStack'
            - 'cloudformation:CreateChangeSet'
            - 'cloudformation:ExecuteChangeSet'
            - 'cloudformation:DeleteChangeSet'
            - 'cloudformation:DescribeChangeSet'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:ValidateTemplate'
            - 'cloudformation:GetTemplateSummary'
            - 'codebuild:StartBuild'
            - 'codebuild:BatchGetBuilds'
          Resource: '*'

  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
            - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - !Ref 'CFNPipelinePolicy'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-CodePipelineAccess'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'iam:PassRole'
                - 'lambda:InvokeFunction'
                - 'lambda:ListFunctions'
                - 'lambda:InvokeAsyc'
                Effect: Allow
                Resource: '*'

  PipelineCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-pipeline-build'
      Description: Build project for deployment pipeline
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.7.1
        EnvironmentVariables:
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AwsAccountId
          - Name: DEPLOY_BUCKET
            Value: !Ref CfnDeployBucket
          - Name: GITHUB_TOKEN
            Value: !Ref GitHubToken
          - Name: STACK_NAME
            Value: !Ref AWS::StackName
          - Name: FINAL_STACK_NAME
            Value: !Ref FinalStackName
          - Name: TOPICARN
            Value: !Ref TopicArn
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline_deploy_spec.yml

  AppCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-app-build'
      Description: Build project for example api
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.7.1
        EnvironmentVariables:
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AwsAccountId
          - Name: DEPLOY_BUCKET
            Value: !Ref CfnDeployBucket
          - Name: INETSUBNETS
            Value: !Join [',', !Ref 'InetSubnets']
          - Name: SERVICE_STACK_NAME
            Value: !Ref ServiceStackName
          - Name: SSMPATHROOT
            Value: !Ref SSMPathRoot
          - Name: TEMPLATE_FILE
            Value: !Ref TemplateFile
          - Name: TOPICARN
            Value: !Ref TopicArn
          - Name: SUBNETS
            Value: !Join [',', !Ref 'Subnets']
          - Name: VPCID
            Value: !Ref VpcId
          - Name: STACK_NAME
            Value: !Ref AWS::StackName
          - Name: FINAL_STACK_NAME
            Value: !Ref FinalStackName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: app_deploy_spec.yml

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref CfnDeployBucket
        Type: S3
      Name: !Sub '${AWS::StackName}-pipeline'
      RoleArn: !GetAtt 'PipelineExecutionRole.Arn'
      Stages:
        - Name: Source
          Actions:
          -
            Name: Source
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: 1
            Configuration:
              Owner: !Ref GitHubUser
              Repo: !Ref GitHubRepo
              Branch: !Ref GitHubBranch
              OAuthToken: !Ref GitHubToken
              PollForSourceChanges: true
            OutputArtifacts:
              - Name: SourceZip
            RunOrder: 1
            
        # Update the pipeline stack here if changes affecting pipeline resources were commited. Doing it here doesn't require manual management of the pipeline stack.
        - Name: pipeline-update
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'PipelineCodeBuildProject'
              InputArtifacts:
                - Name: SourceZip
              RunOrder: 1
        - Name: app-build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'AppCodeBuildProject'
              InputArtifacts:
                - Name: SourceZip
              OutputArtifacts:
                - Name: AppBuildOutput
              RunOrder: 1

Outputs:
  CodePipeline:
    Description: 'CodePipeline URL'
    Value: !Sub 'https://console.aws.amazon.com/codesuite/codepipeline/pipelines/${Pipeline}/view'

  AppCodeBuildProject:
    Description: 'App CodeBuild project URL'
    Value: !Sub 'https://console.aws.amazon.com/codesuite/codebuild/projects/${AppCodeBuildProject}/history'


  PipelineCodeBuildProject:
    Description: 'Pipeline CodeBuild project URL'
    Value: !Sub 'https://console.aws.amazon.com/codesuite/codebuild/projects/${PipelineCodeBuildProject}/history'
